# Feature list

  + Should send a Notification when a website goes down.
    + registration
    + sign in
    + creating of monitors
      Monitor
        name
        url
    + scheduled checks every 1 minute
    + notifications
  + A notification should be sent only if the state of a monitor changes from UP to DOWN or DOWN to UP
  + Should send a Notification when a website comes back up.
  + Should make the test every minute
  + Setup Nginx on the production server
  + Validation and data cleanup
    + clean email before finding it for authentication
    + clean the url before saving
      + scheme and domain should be downcased, e.g. HTTP://EXAMPLE.COM/FooBar should be saved as http://example.com/FooBar
  + Setup process monitoring for our web server on our linux box
  + Use full email Webmonitor Support <noreply@..>
  + Make status an enum
  + Show current status of monitors
  + Should record events like UP and DOWN
  + Format times according to the user's timezone
  + Should show the event's reason if it is a DOWN event
  + Should record stats like response time
  + Should show uptime for the last 24 hours, 7 days, 1 month
  + Remove updated_at from MonitorEvent
  + WONTFIX: Change inserted_at in MonitorEvent to event_at
  + WONTFIX: Merge Checker.Stats with MonitorStat
  + Perform a check to make sure that we are up before notifying that a monitor is down
  + Setup firewall on the server
  + Automate deployment using a script or edeliver or relisa
  + Write tests for the AWS Lambda code
  + Perform a second check from a different server if site monitor goes down before notifying
  + Setup SSL on the production server using Lets Encrypt, with auto renew
  + Use AWS lambda to perform a second check if the site monitor goes down

  - Fix CSS
  - Flesh out the UI
  - Login with Google

  - Fix algorithm bug causing a complete downtime to show only a <100% downtime?
    e.g. if I created a monitor 1 hour ago, the 24 hour downtime shows 1/24% whereas it should show 100%
  - Should show response time in a nice bar graph using D3
  - Should show response time aggregate data
  - Make the app look pretty :)
  - Turn the deploy script into an elixir package

- - -

  - Format the errors properly
  - Should allow changing the check time from 1 minute to 5 minutes
  - Should record stats like response time across different servers
  - Allow a remote server to form a symbiotic relationship with other servers
    say we have 2 servers: A and B
      - Use Phoenix Channels for communication
      - A should be able to use B's server to verify when there is a downtime and B A's server


  - Should test a website from multiple locations if it goes down.

  - Should allow configuring headers of the request?
  - Should allow testing complex info about the server
  - Should allow user to make this info public
  - Should show a nice graph of uptime which can be embedded by the user
  - Domain monitoring
  - SSL monitoring
  - Virus scanning via a google api?
  - Add more notification contacts

  - Data should be sharded and duplicated for redundancy
    - Should work if one of our server goes down

  - Allow users to make the stats of their app public
  - Add a REST API

  - Notification methods
    - HTTP webhook
    - Slack
    - Boxcar
    - Android app
