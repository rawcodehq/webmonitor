use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :webmonitor, Webmonitor.Endpoint,
  http: [port: {:system, "PORT"}],
  url: [host: "webmonitorhq.com", port: 80],
  root: ".",
  cache_static_manifest: "priv/static/manifest.json",
  server: true

# Do not print debug messages in production
config :logger, level: :info

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :webmonitor, Webmonitor.Endpoint, server: true
#
# You will also need to set the application root to `.` in order
# for the new static assets to be served after a hot upgrade:
#
#     config :webmonitor, Webmonitor.Endpoint, root: "."

config :webmonitor, Webmonitor.Mailer,
  adapter: Bamboo.SMTPAdapter,
  server: {:system, "WM_SMTP_SERVER"},
  port: 465,
  #tls: :always,
  ssl: true,
  retries: 1,
  username: {:system, "WM_SMTP_USERNAME"},
  password: {:system, "WM_SMTP_PASSWORD"}

# In this file, we keep production configuration that
# you likely want to automate and keep it away from
# your version control system.
config :webmonitor, Webmonitor.Endpoint,
  secret_key_base: {:system, "SECRET_KEY_BASE"}

# Configure your database
config :webmonitor, Webmonitor.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: {:system, "PG_USER"},
  password: {:system, "PG_PASSWORD"},
  database: "webmonitor_prod",
  pool_size: 20
